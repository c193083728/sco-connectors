apiVersion: camel.apache.org/v1alpha1
kind: Kamelet
metadata:
  name: connector-kafka-source
  annotations:
    camel.apache.org/provider: "Red Hat"
    camel.apache.org/kamelet.version: "${quarkus.sco.kamelets.version}"
  labels:
    camel.apache.org/kamelet.type: "source"
spec:
  definition:
    title: "Managed Kafka Source"
    description: |-
      Receive data from Managed Kafka topics.
    required:
      - topic
      - bootstrapServers
    type: object
    properties:
      topic:
        title: Topic Names
        description: A comma-separated list of Kafka topic names.
        type: string
      bootstrapServers:
        title: Bootstrap Servers
        description: Comma separated list of Kafka Broker URLs
        type: string
      securityProtocol:
        title: Security Protocol
        description: Protocol used to communicate with brokers. SASL_PLAINTEXT, PLAINTEXT, SASL_SSL and SSL are supported
        type: string
      saslMechanism:
        title: SASL Mechanism
        description: The Simple Authentication and Security Layer (SASL) Mechanism used.
        type: string
      user:
        title: Username
        description: Username to authenticate to Kafka
        type: string
        x-descriptors:
          - urn:camel:group:credentials
      password:
        title: Password
        description: Password to authenticate to kafka
        type: string
        format: password
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:password
          - urn:camel:group:credentials
  dependencies:
    - "camel:kafka"
    - "camel:kamelet"
  template:
    beans:
      - name: "kc"
        type: "#class:org.apache.camel.component.kafka.KafkaComponent"
        properties:
          createConsumerBackoffInterval: "3000"
          createConsumerBackoffMaxAttempts: "100"
          subscribeConsumerBackoffInterval: "3000"
          subscribeConsumerBackoffMaxAttempts: "100"
      - name: "kafka-client-factory"
        type: "#class:com.github.sco1237896.connector.kamelet.kafka.ClientFactory"
        properties:
          bootstrapUrl: "{{bootstrapServers}}"
          username: '{{user}}'
          password: '{{password}}'
          securityProtocol: "{{securityProtocol:}}"
          saslMechanism: "{{saslMechanism:}}"
    from:
      uri: "{{kc}}:{{topic}}"
      parameters:
        autoOffsetReset: "{{autoOffsetReset:earliest}}"
        groupId: "{{?consumerGroup}}"
        keyDeserializer: "{{keyDeserializer:org.apache.kafka.common.serialization.ByteArrayDeserializer}}"
        valueDeserializer: "{{valueDeserializer:org.apache.kafka.common.serialization.ByteArrayDeserializer}}"
        kafkaClientFactory: "#{{kafka-client-factory}}"
        headerDeserializer: "#class:com.github.sco1237896.connector.kamelet.kafka.ToStringHeaderDeserializer"
        pollOnError: "{{pollOnError:RECONNECT}}"
      steps:
      - removeHeader:
          name: "kafka.HEADERS"
      - to: "kamelet:sink"
